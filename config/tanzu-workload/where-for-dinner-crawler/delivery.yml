apiVersion: apps/v1
kind: Deployment
metadata:
  name: where-for-dinner-crawler
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-crawler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: where-for-dinner-crawler
      apps.tanzu.vmware.com/has-tests: "true"
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: where-for-dinner-crawler
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"where-for-dinner-crawler","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"server"},"name":"where-for-dinner-crawler","namespace":"tanzu-workload"},"spec":{"params":[{"name":"gitops_server_address","value":"https://github.com/"},{"name":"gitops_repository_owner","value":"kirtiapte"},{"name":"gitops_repository_name","value":"where-for-dinner"},{"name":"gitops_server_kind","value":"github"},{"name":"gitops_commit_branch","value":"origin/main"},{"name":"gitops_pull_request_title","value":"ready for review"},{"name":"gitops_pull_request_body","value":"generated by supply chain"},{"name":"testing_pipeline_matching_labels","value":{"apps.tanzu.vmware.com/language":"java","apps.tanzu.vmware.com/pipeline":"test"}},{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"resources":{"limits":{"cpu":"1500m","memory":"750M"},"requests":{"cpu":"100m","memory":"500M"}},"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/kirtiapte/where-for-dinner"},"subPath":"where-for-dinner-crawler-python"}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: where-for-dinner-crawler
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: where-for-dinner-crawler
    spec:
      containers:
      - image: kapte.azurecr.io/tap-packages/where-for-dinner-crawler-tanzu-workload@sha256:48446e5de6619c08b19faf99f14e889e3df43102fc9bd199c8da56d2b1ae514f
        name: workload
        resources:
          limits:
            cpu: 1500m
            memory: 750M
          requests:
            cpu: 100m
            memory: 500M
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: where-for-dinner-crawler
  labels:
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-crawler
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: where-for-dinner-crawler
  ports:
  - targetPort: 8080
    port: 80
    name: http

